// Generated by CoffeeScript 1.6.1
(function() {
  var Queries, Query, ResultsView, Router, Tweet, TweetView, Tweets, appRouter, tweets;

  Tweet = Backbone.Model.extend();

  Query = Backbone.Model.extend();

  Tweets = Backbone.Collection.extend({
    model: Tweet,
    localStorage: new Backbone.LocalStorage('bb_twts')
  });

  tweets = new Tweets;

  tweets.on('sync', function() {
    return console.log('tweets synced with local storage');
  });

  Queries = Backbone.Collection.extend({
    model: Query,
    localStorage: new Backbone.LocalStorage('bb_logs')
  });

  ResultsView = Backbone.View.extend({
    el: $('#search'),
    events: {
      'click button#s': 'searchHash',
      'keypress input#q': 'keyPressed'
    },
    initialize: function() {
      return this.searchHash();
    },
    keyPressed: function(e) {
      if (e.keyCode === 13) {
        return this.searchHash(e);
      }
    },
    searchHash: function(e) {
      var hash, q, src_url, _this;
      if (e != null) {
        e.preventDefault();
      }
      console.clear();
      $('#results').empty();
      q = $('#q').val();
      hash = '%23';
      console.log('searching: ' + q);
      _this = this;
      src_url = 'http://search.twitter.com/search.json?callback=?';
      return $.getJSON(src_url, {
        q: hash + q
      }, function(_data) {
        var i, result, tweet, tweetView, _results;
        _results = [];
        for (i in _data.results) {
          result = _.pick(_data.results[i], 'created_at', 'from_user', 'from_user_id', 'profile_image_url', 'source', 'text');
          _.extend(result, {
            num: parseInt(i) + 1,
            hash: q
          });
          tweet = new Tweet(result);
          tweets.add(tweet);
          console.log(result);
          tweetView = new TweetView({
            model: tweet
          });
          _results.push(tweetView.render());
        }
        return _results;
      });
    }
  });

  TweetView = Backbone.View.extend({
    render: function() {
      var result_template, tweet;
      this.model.save();
      result_template = '<tr>\
				<td> <%= num  %> </td>\
				<td> <a href="http://twitter.com/<%= from_user %>" title="<%= from_user %>">@<%= from_user %></a> </td>\
				<td> <%= text %> </td>\
			</tr>';
      tweet = _.template(result_template, this.model.toJSON());
      return $('#results').append(tweet);
    }
  });

  /*
  ticker = {}
  ticker.max = 60000 # 1min
  ticker.tick = 10000 # 10s
  ticker.current = 0 # current active time
  setInterval(
  	()->
  		if ticker.current < ticker.max
  			resultsView = new ResultsView
  			resultsView.searchHash()
  			ticker.current += ticker.tick
  			console.log ticker.current + ' / ' + ticker.max
  		else
  			console.clear() # clear console in chrome
  			console.log 'sleeping...'
  			$('#sleep').fadeIn()
  	ticker.tick
  )
  
  $('#sleep').click(
  	()->
  		ticker.current = 0
  		$('#sleep').fadeOut()
  )
  
  $('#sleep').css(
  	'cursor'
  	'pointer'
  )
  */


  Router = Backbone.Router.extend({
    routes: {
      "": "index"
    },
    index: function() {
      var resultsView;
      return resultsView = new ResultsView;
    }
  });

  appRouter = new Router();

  Backbone.history.start();

}).call(this);
