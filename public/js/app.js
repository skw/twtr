// Generated by CoffeeScript 1.6.2
(function() {
  var Queries, Query, ResultsView, Router, Twt, TwtView, Twts, appRouter, queries, ticker, twts;

  Twt = Backbone.Model.extend();

  Query = Backbone.Model.extend();

  Twts = Backbone.Collection.extend({
    model: Twt,
    localStorage: new Backbone.LocalStorage('bb_twts')
  });

  twts = new Twts;

  twts.on('sync', function() {
    return console.log('tweets synced with local storage');
  });

  Queries = Backbone.Collection.extend({
    model: Query,
    localStorage: new Backbone.LocalStorage('bb_logs')
  });

  queries = new Queries;

  queries.on('sync', function() {
    return console.log('queries synced with local storage');
  });

  ResultsView = Backbone.View.extend({
    el: $('#search'),
    events: {
      'click button#s': 'searchHash',
      'keypress input#q': 'keyPressed'
    },
    keyPressed: function(e) {
      if (e.keyCode === 13) {
        return this.searchHash(e);
      }
    },
    searchHash: function(e) {
      var hash, q, src_url, _this;

      if (e != null) {
        e.preventDefault();
      }
      console.clear();
      $('#results').empty();
      q = $('#q').val();
      hash = '%23';
      console.log('searching: ' + q);
      _this = this;
      src_url = 'http://search.twitter.com/search.json?callback=?';
      return $.getJSON(src_url, {
        q: hash + q
      }, function(_data) {
        var i, query, result, search_data, twt, twtView, _results;

        search_data = _.pick(_data.results[0], 'created_at');
        _.extend(search_data, {
          q: q
        });
        query = new Query(search_data);
        queries.add(query);
        query.save();
        _results = [];
        for (i in _data.results) {
          result = _.pick(_data.results[i], 'created_at', 'from_user', 'from_user_id', 'profile_image_url', 'source', 'text');
          _.extend(result, {
            num: parseInt(i) + 1,
            q: q
          });
          twt = new Twt(result);
          twts.add(twt);
          twtView = new TwtView({
            model: twt
          });
          twt.save();
          twtView.render();
          _results.push(false);
        }
        return _results;
      });
    }
  });

  TwtView = Backbone.View.extend({
    render: function() {
      var result_template, twt;

      result_template = '<tr>\
				<td> <%= num  %> </td>\
				<td> <a href="http://twitter.com/<%= from_user %>" title="<%= from_user %>">@<%= from_user %></a> </td>\
				<td> <%= text %> </td>\
			</tr>';
      twt = _.template(result_template, this.model.toJSON());
      return $('#results').append(twt);
    }
  });

  ticker = {};

  ticker.max = 60000;

  ticker.tick = 10000;

  ticker.current = 0;

  setInterval(function() {
    var resultsView2;

    if (ticker.current < ticker.max) {
      resultsView2 = new ResultsView;
      resultsView2.searchHash();
      ticker.current += ticker.tick;
      return console.log(ticker.current + ' / ' + ticker.max);
    } else {
      console.clear();
      console.log('sleeping...');
      return $('#sleep').fadeIn();
    }
  }, ticker.tick);

  $('#sleep').click(function() {
    ticker.current = 0;
    return $('#sleep').fadeOut();
  });

  $('#sleep').css('cursor', 'pointer');

  Router = Backbone.Router.extend({
    routes: {
      "": "index"
    },
    index: function() {
      var resultsView;

      return resultsView = new ResultsView;
    }
  });

  appRouter = new Router();

  Backbone.history.start();

}).call(this);
